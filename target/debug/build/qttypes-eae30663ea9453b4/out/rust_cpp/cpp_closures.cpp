
/* THIS FILE IS GENERATED BY rust-cpp. DO NOT EDIT */

#include "stdint.h" // For {u}intN_t
#include <new> // For placement new
#include <cstdlib> // For abort
#include <type_traits>
#include <utility>

namespace rustcpp {

// We can't just pass or return any type from extern "C" rust functions (because the call
// convention may differ between the C++ type, and the Rust type).
// So we make sure to pass trivial structure that only contains a pointer to the object we want to
// pass. The constructor of these helper class contains a 'container' of the right size which will
// be allocated on the stack.
template<typename T> struct return_helper {
    struct container {
#if defined (_MSC_VER) && (_MSC_VER + 0 < 1900)
        char memory[sizeof(T)];
        ~container() { reinterpret_cast<T*>(this)->~T(); }
#else
        // The fact that it is in an union means it is properly sized and aligned, but we have
        // to call the destructor and constructor manually
        union { T memory; };
        ~container() { memory.~T(); }
#endif
        container() {}
    };
    const container* data;
    return_helper(int, const container &c = container()) : data(&c) { }
};

template<typename T> struct argument_helper {
    using type = const T&;
};
template<typename T> struct argument_helper<T&> {
    T &ref;
    argument_helper(T &x) : ref(x) {}
    using type = argument_helper<T&> const&;
};

template<typename T>
typename std::enable_if<std::is_copy_constructible<T>::value>::type copy_helper(const void *src, void *dest)
{ new (dest) T (*static_cast<T const*>(src)); }
template<typename T>
typename std::enable_if<!std::is_copy_constructible<T>::value>::type copy_helper(const void *, void *)
{ std::abort(); }
template<typename T>
typename std::enable_if<std::is_default_constructible<T>::value>::type default_helper(void *dest)
{ new (dest) T(); }
template<typename T>
typename std::enable_if<!std::is_default_constructible<T>::value>::type default_helper(void *)
{ std::abort(); }

template<typename T> int compare_helper(const T &a, const T&b, int cmp) {
    switch (cmp) {
        using namespace std::rel_ops;
        case 0:
            if (a < b)
                return -1;
            if (b < a)
                return 1;
            return 0;
        case -2: return a < b;
        case 2: return a > b;
        case -1: return a <= b;
        case 1: return a >= b;
    }
    std::abort();
}
}

#define RUST_CPP_CLASS_HELPER(HASH, ...) \
    extern "C" { \
    void __cpp_destructor_##HASH(void *ptr) { typedef __VA_ARGS__ T; static_cast<T*>(ptr)->~T(); } \
    void __cpp_copy_##HASH(const void *src, void *dest) { rustcpp::copy_helper<__VA_ARGS__>(src, dest); } \
    void __cpp_default_##HASH(void *dest) { rustcpp::default_helper<__VA_ARGS__>(dest); } \
    }

#line 152 "src/lib.rs"
       
    #include <QtCore/QByteArray>
    #include <QtCore/QString>
    #include <QtCore/QDateTime>
    #include <QtCore/QVariant>
    #include <QtCore/QModelIndex>
    #include <QtCore/QUrl>

    #include <QtGui/QImage>
    #include <QtGui/QPixmap>


#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline const char* __cpp_closure_14953426298555592204_impl(const QByteArray* const& self, size_t & size) {
#line 175 "src/lib.rs"
                                                                                                                
                size = self->size();
                return self->constData();
            
}
extern "C" {
void __cpp_closure_14953426298555592204(const QByteArray* const& self, size_t & size, void* __result) {
    ::new(__result) (const char*)(__cpp_closure_14953426298555592204_impl(self, size));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QByteArray __cpp_closure_13832418542422498288_impl(size_t const& len, char* const& ptr) {
#line 191 "src/lib.rs"
                                                                                     
            return QByteArray(ptr, len);
        
}
extern "C" {
void __cpp_closure_13832418542422498288(size_t const& len, char* const& ptr, void* __result) {
    ::new(__result) (QByteArray)(__cpp_closure_13832418542422498288_impl(len, ptr));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QByteArray __cpp_closure_9494918668295232290_impl(QString const& s) {
#line 211 "src/lib.rs"
                                                                    
            return std::move(s).toUtf8();
        
}
extern "C" {
void __cpp_closure_9494918668295232290(QString const& s, void* __result) {
    ::new(__result) (QByteArray)(__cpp_closure_9494918668295232290_impl(s));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline const char* __cpp_closure_2696346175827727514_impl(const QByteArray* const& self) {
#line 220 "src/lib.rs"
                                                                                              
                return self->constData();
            
}
extern "C" {
void __cpp_closure_2696346175827727514(const QByteArray* const& self, void* __result) {
    ::new(__result) (const char*)(__cpp_closure_2696346175827727514_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QDate __cpp_closure_11424612103563868027_impl(int const& y, int const& m, int const& d) {
#line 246 "src/lib.rs"
                                                                              
            return QDate(y, m, d);
        
}
extern "C" {
void __cpp_closure_11424612103563868027(int const& y, int const& m, int const& d, void* __result) {
    ::new(__result) (QDate)(__cpp_closure_11424612103563868027_impl(y, m, d));
}
}
#line 246 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

extern "C" {
void __cpp_closure_12775385753301601807(QDate* const& self, int* const& y, int* const& m, int* const& d) {
#line 265 "src/lib.rs"
                                                                               
            return self->getDate(y, m, d);
        
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline bool __cpp_closure_14819446103283035495_impl(const QDate* const& self) {
#line 276 "src/lib.rs"
                                                                
            return self->isValid();
        
}
extern "C" {
void __cpp_closure_14819446103283035495(const QDate* const& self, void* __result) {
    ::new(__result) (bool)(__cpp_closure_14819446103283035495_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QTime __cpp_closure_15797890745591344913_impl(int const& h, int const& m, int const& s, int const& ms) {
#line 341 "src/lib.rs"
                                                                                           
            return QTime(h, m, s, ms);
        
}
extern "C" {
void __cpp_closure_15797890745591344913(int const& h, int const& m, int const& s, int const& ms, void* __result) {
    ::new(__result) (QTime)(__cpp_closure_15797890745591344913_impl(h, m, s, ms));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline int __cpp_closure_10585925668332453185_impl(const QTime* const& self) {
#line 350 "src/lib.rs"
                                                              
            return self->hour();
        
}
extern "C" {
void __cpp_closure_10585925668332453185(const QTime* const& self, void* __result) {
    ::new(__result) (int)(__cpp_closure_10585925668332453185_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline int __cpp_closure_3331149735555102853_impl(const QTime* const& self) {
#line 359 "src/lib.rs"
                                                              
            return self->minute();
        
}
extern "C" {
void __cpp_closure_3331149735555102853(const QTime* const& self, void* __result) {
    ::new(__result) (int)(__cpp_closure_3331149735555102853_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline int __cpp_closure_17072224768364576045_impl(const QTime* const& self) {
#line 368 "src/lib.rs"
                                                              
            return self->second();
        
}
extern "C" {
void __cpp_closure_17072224768364576045(const QTime* const& self, void* __result) {
    ::new(__result) (int)(__cpp_closure_17072224768364576045_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline int __cpp_closure_9721209464301072802_impl(const QTime* const& self) {
#line 377 "src/lib.rs"
                                                              
            return self->msec();
        
}
extern "C" {
void __cpp_closure_9721209464301072802(const QTime* const& self, void* __result) {
    ::new(__result) (int)(__cpp_closure_9721209464301072802_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline bool __cpp_closure_8323347636403349898_impl(const QTime* const& self) {
#line 391 "src/lib.rs"
                                                                
            return self->isValid();
        
}
extern "C" {
void __cpp_closure_8323347636403349898(const QTime* const& self, void* __result) {
    ::new(__result) (bool)(__cpp_closure_8323347636403349898_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QDateTime __cpp_closure_3452907543534975891_impl(QDate const& date) {
#line 456 "src/lib.rs"
                                                                   
        #if QT_VERSION >= QT_VERSION_CHECK(5, 14, 0)
                    return date.startOfDay();
        #else
                    return QDateTime(date);
        #endif
                
}
extern "C" {
void __cpp_closure_3452907543534975891(QDate const& date, void* __result) {
    ::new(__result) (QDateTime)(__cpp_closure_3452907543534975891_impl(date));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QDateTime __cpp_closure_6743842664728025353_impl(QDate const& date, QTime const& time) {
#line 473 "src/lib.rs"
                                                                                    
            return QDateTime(date, time);
        
}
extern "C" {
void __cpp_closure_6743842664728025353(QDate const& date, QTime const& time, void* __result) {
    ::new(__result) (QDateTime)(__cpp_closure_6743842664728025353_impl(date, time));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QDate __cpp_closure_18391840494275410237_impl(const QDateTime* const& self) {
#line 482 "src/lib.rs"
                                                                      
            return self->date();
        
}
extern "C" {
void __cpp_closure_18391840494275410237(const QDateTime* const& self, void* __result) {
    ::new(__result) (QDate)(__cpp_closure_18391840494275410237_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QTime __cpp_closure_15339080516634983876_impl(const QDateTime* const& self) {
#line 491 "src/lib.rs"
                                                                      
            return self->time();
        
}
extern "C" {
void __cpp_closure_15339080516634983876(const QDateTime* const& self, void* __result) {
    ::new(__result) (QTime)(__cpp_closure_15339080516634983876_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline bool __cpp_closure_2920777984922051220_impl(const QDateTime* const& self) {
#line 505 "src/lib.rs"
                                                                    
            return self->isValid();
        
}
extern "C" {
void __cpp_closure_2920777984922051220(const QDateTime* const& self, void* __result) {
    ::new(__result) (bool)(__cpp_closure_2920777984922051220_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QUrl __cpp_closure_5742851501341889505_impl(QString const& user_input) {
#line 578 "src/lib.rs"
                                                                 
            return QUrl::fromUserInput(user_input);
        
}
extern "C" {
void __cpp_closure_5742851501341889505(QString const& user_input, void* __result) {
    ::new(__result) (QUrl)(__cpp_closure_5742851501341889505_impl(user_input));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QUrl __cpp_closure_11023614134046150292_impl(QString const& qstring) {
#line 585 "src/lib.rs"
                                                              
            return QUrl(qstring);
        
}
extern "C" {
void __cpp_closure_11023614134046150292(QString const& qstring, void* __result) {
    ::new(__result) (QUrl)(__cpp_closure_11023614134046150292_impl(qstring));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline const QChar* __cpp_closure_14025320643606957968_impl(const QString* const& self, size_t & size) {
#line 603 "src/lib.rs"
                                                                                                               
                size = self->size();
                return self->constData();
            
}
extern "C" {
void __cpp_closure_14025320643606957968(const QString* const& self, size_t & size, void* __result) {
    ::new(__result) (const QChar*)(__cpp_closure_14025320643606957968_impl(self, size));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QString __cpp_closure_14045375361165719349_impl(QUrl const& qurl) {
#line 620 "src/lib.rs"
                                                              
            return qurl.toString();
        
}
extern "C" {
void __cpp_closure_14045375361165719349(QUrl const& qurl, void* __result) {
    ::new(__result) (QString)(__cpp_closure_14045375361165719349_impl(qurl));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QString __cpp_closure_2354907659991406413_impl(size_t const& len, char* const& ptr) {
#line 630 "src/lib.rs"
                                                                               
            return QString::fromUtf8(ptr, len);
        
}
extern "C" {
void __cpp_closure_2354907659991406413(size_t const& len, char* const& ptr, void* __result) {
    ::new(__result) (QString)(__cpp_closure_2354907659991406413_impl(len, ptr));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QByteArray __cpp_closure_17828704341526981158_impl(const QVariant* const& self) {
#line 668 "src/lib.rs"
                                                                               
            return self->toByteArray();
        
}
extern "C" {
void __cpp_closure_17828704341526981158(const QVariant* const& self, void* __result) {
    ::new(__result) (QByteArray)(__cpp_closure_17828704341526981158_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline bool __cpp_closure_8422528797998894441_impl(const QVariant* const& self) {
#line 677 "src/lib.rs"
                                                                   
            return self->toBool();
        
}
extern "C" {
void __cpp_closure_8422528797998894441(const QVariant* const& self, void* __result) {
    ::new(__result) (bool)(__cpp_closure_8422528797998894441_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline int __cpp_closure_10304068304987445024_impl(const QVariant* const& self) {
#line 686 "src/lib.rs"
                                                                 
            return self->userType();
        
}
extern "C" {
void __cpp_closure_10304068304987445024(const QVariant* const& self, void* __result) {
    ::new(__result) (int)(__cpp_closure_10304068304987445024_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_9776336523920512089_impl(QString const& a) {
#line 698 "src/lib.rs"
                                                                
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_9776336523920512089(QString const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_9776336523920512089_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_10260280531340185698_impl(QByteArray const& a) {
#line 708 "src/lib.rs"
                                                                   
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_10260280531340185698(QByteArray const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_10260280531340185698_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_6851256963740806587_impl(QDate const& a) {
#line 718 "src/lib.rs"
                                                              
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_6851256963740806587(QDate const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_6851256963740806587_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_14822824282198042533_impl(QTime const& a) {
#line 728 "src/lib.rs"
                                                              
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_14822824282198042533(QTime const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_14822824282198042533_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_9577632875754428637_impl(QDateTime const& a) {
#line 738 "src/lib.rs"
                                                                  
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_9577632875754428637(QDateTime const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_9577632875754428637_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_12585084837777232506_impl(QUrl const& a) {
#line 748 "src/lib.rs"
                                                             
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_12585084837777232506(QUrl const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_12585084837777232506_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_1874428007057786242_impl(QVariantList const& a) {
#line 758 "src/lib.rs"
                                                                     
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_1874428007057786242(QVariantList const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_1874428007057786242_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_10556058091063281365_impl(int const& a) {
#line 768 "src/lib.rs"
                                                            
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_10556058091063281365(int const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_10556058091063281365_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_9580956313917194299_impl(uint const& a) {
#line 778 "src/lib.rs"
                                                             
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_9580956313917194299(uint const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_9580956313917194299_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_15195171177230650588_impl(qlonglong const& a) {
#line 788 "src/lib.rs"
                                                                  
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_15195171177230650588(qlonglong const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_15195171177230650588_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_14718237765756166838_impl(qulonglong const& a) {
#line 798 "src/lib.rs"
                                                                   
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_14718237765756166838(qulonglong const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_14718237765756166838_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_12703415612999444173_impl(float const& a) {
#line 808 "src/lib.rs"
                                                              
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_12703415612999444173(float const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_12703415612999444173_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_2797084026161068402_impl(double const& a) {
#line 818 "src/lib.rs"
                                                               
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_2797084026161068402(double const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_2797084026161068402_impl(a));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_16806477755470202597_impl(bool const& a) {
#line 828 "src/lib.rs"
                                                             
            return QVariant(a);
        
}
extern "C" {
void __cpp_closure_16806477755470202597(bool const& a, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_16806477755470202597_impl(a));
}
}
#line 246 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

extern "C" {
void __cpp_closure_3880527165420293174(QVariantList* const& self, QVariant const& value) {
#line 853 "src/lib.rs"
                                                                    
            self->append(std::move(value));
        
}
}
#line 246 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

extern "C" {
void __cpp_closure_16750525598968497861(QVariantList* const& self, size_t const& index, QVariant const& element) {
#line 862 "src/lib.rs"
                                                                                         
            self->insert(index, std::move(element));
        
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant __cpp_closure_17547660470441641739_impl(QVariantList* const& self, size_t const& index) {
#line 871 "src/lib.rs"
                                                                                            
            return self->takeAt(index);
        
}
extern "C" {
void __cpp_closure_17547660470441641739(QVariantList* const& self, size_t const& index, void* __result) {
    ::new(__result) (QVariant)(__cpp_closure_17547660470441641739_impl(self, index));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline size_t __cpp_closure_17037157592311804455_impl(QVariantList* const& self) {
#line 880 "src/lib.rs"
                                                                    
            return self->size();
        
}
extern "C" {
void __cpp_closure_17037157592311804455(QVariantList* const& self, void* __result) {
    ::new(__result) (size_t)(__cpp_closure_17037157592311804455_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline bool __cpp_closure_16424388451414857572_impl(QVariantList* const& self) {
#line 889 "src/lib.rs"
                                                                 
            return self->isEmpty();
        
}
extern "C" {
void __cpp_closure_16424388451414857572(QVariantList* const& self, void* __result) {
    ::new(__result) (bool)(__cpp_closure_16424388451414857572_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline const QVariant* __cpp_closure_489009982765088639_impl(QVariantList* const& self, size_t const& index) {
#line 903 "src/lib.rs"
                                                                                                         
                return &self->at(index);
            
}
extern "C" {
void __cpp_closure_489009982765088639(QVariantList* const& self, size_t const& index, void* __result) {
    ::new(__result) (const QVariant*)(__cpp_closure_489009982765088639_impl(self, index));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QVariant* __cpp_closure_7458894401545362033_impl(QVariantList* const& self, size_t const& index) {
#line 916 "src/lib.rs"
                                                                                                     
                return &(*self)[index];
            
}
extern "C" {
void __cpp_closure_7458894401545362033(QVariantList* const& self, size_t const& index, void* __result) {
    ::new(__result) (QVariant*)(__cpp_closure_7458894401545362033_impl(self, index));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline uintptr_t __cpp_closure_13585621834051019472_impl(const QModelIndex* const& self) {
#line 1025 "src/lib.rs"
                                                                             return self->internalId(); 
}
extern "C" {
void __cpp_closure_13585621834051019472(const QModelIndex* const& self, void* __result) {
    ::new(__result) (uintptr_t)(__cpp_closure_13585621834051019472_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline int __cpp_closure_14255071748566617395_impl(const QModelIndex* const& self) {
#line 1032 "src/lib.rs"
                                                                     return self->column(); 
}
extern "C" {
void __cpp_closure_14255071748566617395(const QModelIndex* const& self, void* __result) {
    ::new(__result) (int)(__cpp_closure_14255071748566617395_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline int __cpp_closure_7067973194452636557_impl(const QModelIndex* const& self) {
#line 1039 "src/lib.rs"
                                                                     return self->row(); 
}
extern "C" {
void __cpp_closure_7067973194452636557(const QModelIndex* const& self, void* __result) {
    ::new(__result) (int)(__cpp_closure_7067973194452636557_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline bool __cpp_closure_1002981333814347212_impl(const QModelIndex* const& self) {
#line 1046 "src/lib.rs"
                                                                       return self->isValid(); 
}
extern "C" {
void __cpp_closure_1002981333814347212(const QModelIndex* const& self, void* __result) {
    ::new(__result) (bool)(__cpp_closure_1002981333814347212_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline bool __cpp_closure_12086316544111890877_impl(const QRectF* const& self, QPointF const& pos) {
#line 1077 "src/lib.rs"
                                                                                   
            return self->contains(pos);
        
}
extern "C" {
void __cpp_closure_12086316544111890877(const QRectF* const& self, QPointF const& pos, void* __result) {
    ::new(__result) (bool)(__cpp_closure_12086316544111890877_impl(self, pos));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QColor __cpp_closure_11688091042753406134_impl(size_t const& len, char* const& ptr) {
#line 1156 "src/lib.rs"
                                                                             
            return QColor(QLatin1String(ptr, len));
        
}
extern "C" {
void __cpp_closure_11688091042753406134(size_t const& len, char* const& ptr, void* __result) {
    ::new(__result) (QColor)(__cpp_closure_11688091042753406134_impl(len, ptr));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QColor __cpp_closure_14979884349474437996_impl(qreal const& r, qreal const& g, qreal const& b) {
#line 1170 "src/lib.rs"
                                                                                      
            return QColor::fromRgbF(r, g, b);
        
}
extern "C" {
void __cpp_closure_14979884349474437996(qreal const& r, qreal const& g, qreal const& b, void* __result) {
    ::new(__result) (QColor)(__cpp_closure_14979884349474437996_impl(r, g, b));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QColor __cpp_closure_17607348526063084915_impl(qreal const& r, qreal const& g, qreal const& b, qreal const& a) {
#line 1184 "src/lib.rs"
                                                                                                    
            return QColor::fromRgbF(r, g, b, a);
        
}
extern "C" {
void __cpp_closure_17607348526063084915(qreal const& r, qreal const& g, qreal const& b, qreal const& a, void* __result) {
    ::new(__result) (QColor)(__cpp_closure_17607348526063084915_impl(r, g, b, a));
}
}
#line 246 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

extern "C" {
void __cpp_closure_10467227045675067687(const QColor* const& self, qreal* const& r, qreal* const& g, qreal* const& b, qreal* const& a) {
#line 1198 "src/lib.rs"
                                                                                                           
        #if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
            float r_, g_, b_, a_;
            self->getRgbF(&r_, &g_, &b_, &a_);
            *r = r_; *g = g_; *b = b_; *a = a_;
        #else
            return self->getRgbF(r, g, b, a);
        #endif
        
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QImage __cpp_closure_6394057445011363820_impl(QString const& filename) {
#line 1309 "src/lib.rs"
                                                                   
            return QImage(filename);
        
}
extern "C" {
void __cpp_closure_6394057445011363820(QString const& filename, void* __result) {
    ::new(__result) (QImage)(__cpp_closure_6394057445011363820_impl(filename));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QImage __cpp_closure_10892556743500651982_impl(QSize const& size, QImage::Format const& format) {
#line 1318 "src/lib.rs"
                                                                                          
            return QImage(size, format);
        
}
extern "C" {
void __cpp_closure_10892556743500651982(QSize const& size, QImage::Format const& format, void* __result) {
    ::new(__result) (QImage)(__cpp_closure_10892556743500651982_impl(size, format));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QSize __cpp_closure_15899538126540607645_impl(const QImage* const& self) {
#line 1327 "src/lib.rs"
                                                                    return self->size(); 
}
extern "C" {
void __cpp_closure_15899538126540607645(const QImage* const& self, void* __result) {
    ::new(__result) (QSize)(__cpp_closure_15899538126540607645_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QImage::Format __cpp_closure_4534910372929543392_impl(const QImage* const& self) {
#line 1334 "src/lib.rs"
                                                                                   return self->format(); 
}
extern "C" {
void __cpp_closure_4534910372929543392(const QImage* const& self, void* __result) {
    ::new(__result) (QImage::Format)(__cpp_closure_4534910372929543392_impl(self));
}
}
#line 246 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

extern "C" {
void __cpp_closure_10912162641851986331(QImage* const& self, QColor const& color) {
#line 1341 "src/lib.rs"
                                                             self->fill(color); 
}
}
#line 246 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

extern "C" {
void __cpp_closure_13634610544230282393(QImage* const& self, int const& x, int const& y, QColor const& color) {
#line 1348 "src/lib.rs"
                                                                                    
            self->setPixelColor(x, y, color);
        
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QColor __cpp_closure_11793769188191753925_impl(const QImage* const& self, int const& x, int const& y) {
#line 1357 "src/lib.rs"
                                                                                             
            return self->pixelColor(x, y);
        
}
extern "C" {
void __cpp_closure_11793769188191753925(const QImage* const& self, int const& x, int const& y, void* __result) {
    ::new(__result) (QColor)(__cpp_closure_11793769188191753925_impl(self, x, y));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QSize __cpp_closure_4269627225921479960_impl(const QPixmap* const& self) {
#line 1375 "src/lib.rs"
                                                                     return self->size(); 
}
extern "C" {
void __cpp_closure_4269627225921479960(const QPixmap* const& self, void* __result) {
    ::new(__result) (QSize)(__cpp_closure_4269627225921479960_impl(self));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QImage __cpp_closure_12267480048559093730_impl(QPixmap const& pixmap) {
#line 1381 "src/lib.rs"
                                                                  return pixmap.toImage(); 
}
extern "C" {
void __cpp_closure_12267480048559093730(QPixmap const& pixmap, void* __result) {
    ::new(__result) (QImage)(__cpp_closure_12267480048559093730_impl(pixmap));
}
}
#line 265 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"

static inline QPixmap __cpp_closure_1749701084429884052_impl(QImage const& image) {
#line 1387 "src/lib.rs"
                                                                  return QPixmap::fromImage(image); 
}
extern "C" {
void __cpp_closure_1749701084429884052(QImage const& image, void* __result) {
    ::new(__result) (QPixmap)(__cpp_closure_1749701084429884052_impl(image));
}
}
#line 164 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(13218701394024708473, QByteArray)
#line 164 "src/lib.rs"
           extern "C" bool __cpp_equal_13218701394024708473(const QByteArray *a, const QByteArray *b) { return *a == *b; }
#line 164 "src/lib.rs"
           extern "C" bool __cpp_compare_13218701394024708473(const QByteArray *a, const QByteArray *b, int cmp) { return rustcpp::compare_helper(*a, *b, cmp); }
#line 234 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(3855882279009288530, QDate)
#line 234 "src/lib.rs"
           extern "C" bool __cpp_equal_3855882279009288530(const QDate *a, const QDate *b) { return *a == *b; }
#line 234 "src/lib.rs"
           extern "C" bool __cpp_compare_3855882279009288530(const QDate *a, const QDate *b, int cmp) { return rustcpp::compare_helper(*a, *b, cmp); }
#line 322 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(9664509992443926362, QTime)
#line 322 "src/lib.rs"
           extern "C" bool __cpp_equal_9664509992443926362(const QTime *a, const QTime *b) { return *a == *b; }
#line 322 "src/lib.rs"
           extern "C" bool __cpp_compare_9664509992443926362(const QTime *a, const QTime *b, int cmp) { return rustcpp::compare_helper(*a, *b, cmp); }
#line 444 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(12745287873870854044, QDateTime)
#line 444 "src/lib.rs"
           extern "C" bool __cpp_equal_12745287873870854044(const QDateTime *a, const QDateTime *b) { return *a == *b; }
#line 444 "src/lib.rs"
           extern "C" bool __cpp_compare_12745287873870854044(const QDateTime *a, const QDateTime *b, int cmp) { return rustcpp::compare_helper(*a, *b, cmp); }
#line 566 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(904990141642434126, QUrl)
#line 566 "src/lib.rs"
           extern "C" bool __cpp_equal_904990141642434126(const QUrl *a, const QUrl *b) { return *a == *b; }
#line 566 "src/lib.rs"
           extern "C" bool __cpp_compare_904990141642434126(const QUrl *a, const QUrl *b, int cmp) { return rustcpp::compare_helper(*a, *b, cmp); }
#line 591 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(17758593488171663550, QString)
#line 591 "src/lib.rs"
           extern "C" bool __cpp_equal_17758593488171663550(const QString *a, const QString *b) { return *a == *b; }
#line 591 "src/lib.rs"
           extern "C" bool __cpp_compare_17758593488171663550(const QString *a, const QString *b, int cmp) { return rustcpp::compare_helper(*a, *b, cmp); }
#line 656 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(1552316989142249818, QVariant)
#line 656 "src/lib.rs"
           extern "C" bool __cpp_equal_1552316989142249818(const QVariant *a, const QVariant *b) { return *a == *b; }
#line 842 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(17092488062754807674, QVariantList)
#line 1013 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(14287914185611067581, QModelIndex)
#line 1013 "src/lib.rs"
           extern "C" bool __cpp_equal_14287914185611067581(const QModelIndex *a, const QModelIndex *b) { return *a == *b; }
#line 1142 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(16172279075609518444, QColor)
#line 1142 "src/lib.rs"
           extern "C" bool __cpp_equal_16172279075609518444(const QColor *a, const QColor *b) { return *a == *b; }
#line 1297 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(7236053402056270306, QImage)
#line 1297 "src/lib.rs"
           extern "C" bool __cpp_equal_7236053402056270306(const QImage *a, const QImage *b) { return *a == *b; }
#line 1363 "src/lib.rs"
           RUST_CPP_CLASS_HELPER(13185629402565163737, QPixmap)
#line 326 "/home/fabian/.cargo/registry/src/github.com-1ecc6299db9ec823/cpp_build-0.5.6/src/lib.rs"


namespace rustcpp {

template<typename T>
struct AlignOf {
    struct Inner {
        char a;
        T b;
    };
    static const uintptr_t value = sizeof(Inner) - sizeof(T);
};

template<typename T>
struct Flags {
    static const uintptr_t value =
        (std::is_copy_constructible<T>::value << 0) |
        (std::is_default_constructible<T>::value << 1) |
#if !defined(__GNUC__) || (__GNUC__ + 0 >= 5) || defined(__clang__)
        (std::is_trivially_destructible<T>::value << 2) |
        (std::is_trivially_copyable<T>::value << 3) |
        (std::is_trivially_default_constructible<T>::value << 4) |
#endif
        0;
};

struct SizeAlign {
    uint64_t hash;
    uint64_t size;
    uint64_t align;
    uint64_t flags;
};

struct MetaData {
    uint8_t magic[128];
    uint8_t version[16];
    uint64_t length;
    SizeAlign data[181];
};

MetaData
#ifdef _WIN32
    __declspec (selectany)
#elif __GNUC__
    __attribute__((weak))
#endif
    metadata = {
    { 114, 117, 115, 116, 99, 112, 112, 126, 109, 101, 116, 97, 100, 97, 116, 97, 92, 74, 112, 213, 165, 185, 214, 120, 179, 17, 185, 25, 182, 253, 82, 118, 148, 29, 139, 208, 59, 153, 78, 137, 230, 54, 26, 177, 232, 121, 132, 166, 44, 106, 218, 57, 158, 33, 69, 32, 54, 204, 123, 226, 99, 117, 60, 173, 112, 61, 56, 174, 117, 141, 126, 249, 79, 159, 6, 119, 2, 129, 147, 66, 135, 136, 212, 252, 231, 105, 239, 91, 96, 232, 113, 94, 164, 255, 152, 144, 64, 207, 192, 90, 225, 171, 59, 154, 60, 2, 0, 191, 114, 182, 38, 134, 134, 183, 212, 227, 31, 217, 12, 5, 65, 221, 150, 59, 230, 96, 73, 62 },
    "0.5.6",
    181,
    { {
                14953426298555592204ull,
                sizeof(const char*),
                rustcpp::AlignOf<const char*>::value,
                rustcpp::Flags<const char*>::value | 0ull << 32
            }, {
                14953426298555592204ull,
                sizeof(const QByteArray*),
                rustcpp::AlignOf<const QByteArray*>::value,
                rustcpp::Flags<const QByteArray*>::value
            }, {
                14953426298555592204ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13832418542422498288ull,
                sizeof(QByteArray),
                rustcpp::AlignOf<QByteArray>::value,
                rustcpp::Flags<QByteArray>::value | 0ull << 32
            }, {
                13832418542422498288ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13832418542422498288ull,
                sizeof(char*),
                rustcpp::AlignOf<char*>::value,
                rustcpp::Flags<char*>::value
            }, {
                9494918668295232290ull,
                sizeof(QByteArray),
                rustcpp::AlignOf<QByteArray>::value,
                rustcpp::Flags<QByteArray>::value | 0ull << 32
            }, {
                9494918668295232290ull,
                sizeof(QString),
                rustcpp::AlignOf<QString>::value,
                rustcpp::Flags<QString>::value
            }, {
                2696346175827727514ull,
                sizeof(const char*),
                rustcpp::AlignOf<const char*>::value,
                rustcpp::Flags<const char*>::value | 0ull << 32
            }, {
                2696346175827727514ull,
                sizeof(const QByteArray*),
                rustcpp::AlignOf<const QByteArray*>::value,
                rustcpp::Flags<const QByteArray*>::value
            }, {
                11424612103563868027ull,
                sizeof(QDate),
                rustcpp::AlignOf<QDate>::value,
                rustcpp::Flags<QDate>::value | 0ull << 32
            }, {
                11424612103563868027ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                11424612103563868027ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                11424612103563868027ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {12775385753301601807ull, 0, 1, 0ull << 32}, {
                12775385753301601807ull,
                sizeof(QDate*),
                rustcpp::AlignOf<QDate*>::value,
                rustcpp::Flags<QDate*>::value
            }, {
                12775385753301601807ull,
                sizeof(int*),
                rustcpp::AlignOf<int*>::value,
                rustcpp::Flags<int*>::value
            }, {
                12775385753301601807ull,
                sizeof(int*),
                rustcpp::AlignOf<int*>::value,
                rustcpp::Flags<int*>::value
            }, {
                12775385753301601807ull,
                sizeof(int*),
                rustcpp::AlignOf<int*>::value,
                rustcpp::Flags<int*>::value
            }, {
                14819446103283035495ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                14819446103283035495ull,
                sizeof(const QDate*),
                rustcpp::AlignOf<const QDate*>::value,
                rustcpp::Flags<const QDate*>::value
            }, {
                15797890745591344913ull,
                sizeof(QTime),
                rustcpp::AlignOf<QTime>::value,
                rustcpp::Flags<QTime>::value | 0ull << 32
            }, {
                15797890745591344913ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                15797890745591344913ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                15797890745591344913ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                15797890745591344913ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                10585925668332453185ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                10585925668332453185ull,
                sizeof(const QTime*),
                rustcpp::AlignOf<const QTime*>::value,
                rustcpp::Flags<const QTime*>::value
            }, {
                3331149735555102853ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                3331149735555102853ull,
                sizeof(const QTime*),
                rustcpp::AlignOf<const QTime*>::value,
                rustcpp::Flags<const QTime*>::value
            }, {
                17072224768364576045ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                17072224768364576045ull,
                sizeof(const QTime*),
                rustcpp::AlignOf<const QTime*>::value,
                rustcpp::Flags<const QTime*>::value
            }, {
                9721209464301072802ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                9721209464301072802ull,
                sizeof(const QTime*),
                rustcpp::AlignOf<const QTime*>::value,
                rustcpp::Flags<const QTime*>::value
            }, {
                8323347636403349898ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                8323347636403349898ull,
                sizeof(const QTime*),
                rustcpp::AlignOf<const QTime*>::value,
                rustcpp::Flags<const QTime*>::value
            }, {
                3452907543534975891ull,
                sizeof(QDateTime),
                rustcpp::AlignOf<QDateTime>::value,
                rustcpp::Flags<QDateTime>::value | 0ull << 32
            }, {
                3452907543534975891ull,
                sizeof(QDate),
                rustcpp::AlignOf<QDate>::value,
                rustcpp::Flags<QDate>::value
            }, {
                6743842664728025353ull,
                sizeof(QDateTime),
                rustcpp::AlignOf<QDateTime>::value,
                rustcpp::Flags<QDateTime>::value | 0ull << 32
            }, {
                6743842664728025353ull,
                sizeof(QDate),
                rustcpp::AlignOf<QDate>::value,
                rustcpp::Flags<QDate>::value
            }, {
                6743842664728025353ull,
                sizeof(QTime),
                rustcpp::AlignOf<QTime>::value,
                rustcpp::Flags<QTime>::value
            }, {
                18391840494275410237ull,
                sizeof(QDate),
                rustcpp::AlignOf<QDate>::value,
                rustcpp::Flags<QDate>::value | 0ull << 32
            }, {
                18391840494275410237ull,
                sizeof(const QDateTime*),
                rustcpp::AlignOf<const QDateTime*>::value,
                rustcpp::Flags<const QDateTime*>::value
            }, {
                15339080516634983876ull,
                sizeof(QTime),
                rustcpp::AlignOf<QTime>::value,
                rustcpp::Flags<QTime>::value | 0ull << 32
            }, {
                15339080516634983876ull,
                sizeof(const QDateTime*),
                rustcpp::AlignOf<const QDateTime*>::value,
                rustcpp::Flags<const QDateTime*>::value
            }, {
                2920777984922051220ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                2920777984922051220ull,
                sizeof(const QDateTime*),
                rustcpp::AlignOf<const QDateTime*>::value,
                rustcpp::Flags<const QDateTime*>::value
            }, {
                5742851501341889505ull,
                sizeof(QUrl),
                rustcpp::AlignOf<QUrl>::value,
                rustcpp::Flags<QUrl>::value | 0ull << 32
            }, {
                5742851501341889505ull,
                sizeof(QString),
                rustcpp::AlignOf<QString>::value,
                rustcpp::Flags<QString>::value
            }, {
                11023614134046150292ull,
                sizeof(QUrl),
                rustcpp::AlignOf<QUrl>::value,
                rustcpp::Flags<QUrl>::value | 0ull << 32
            }, {
                11023614134046150292ull,
                sizeof(QString),
                rustcpp::AlignOf<QString>::value,
                rustcpp::Flags<QString>::value
            }, {
                14025320643606957968ull,
                sizeof(const QChar*),
                rustcpp::AlignOf<const QChar*>::value,
                rustcpp::Flags<const QChar*>::value | 0ull << 32
            }, {
                14025320643606957968ull,
                sizeof(const QString*),
                rustcpp::AlignOf<const QString*>::value,
                rustcpp::Flags<const QString*>::value
            }, {
                14025320643606957968ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                14045375361165719349ull,
                sizeof(QString),
                rustcpp::AlignOf<QString>::value,
                rustcpp::Flags<QString>::value | 0ull << 32
            }, {
                14045375361165719349ull,
                sizeof(QUrl),
                rustcpp::AlignOf<QUrl>::value,
                rustcpp::Flags<QUrl>::value
            }, {
                2354907659991406413ull,
                sizeof(QString),
                rustcpp::AlignOf<QString>::value,
                rustcpp::Flags<QString>::value | 0ull << 32
            }, {
                2354907659991406413ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                2354907659991406413ull,
                sizeof(char*),
                rustcpp::AlignOf<char*>::value,
                rustcpp::Flags<char*>::value
            }, {
                17828704341526981158ull,
                sizeof(QByteArray),
                rustcpp::AlignOf<QByteArray>::value,
                rustcpp::Flags<QByteArray>::value | 0ull << 32
            }, {
                17828704341526981158ull,
                sizeof(const QVariant*),
                rustcpp::AlignOf<const QVariant*>::value,
                rustcpp::Flags<const QVariant*>::value
            }, {
                8422528797998894441ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                8422528797998894441ull,
                sizeof(const QVariant*),
                rustcpp::AlignOf<const QVariant*>::value,
                rustcpp::Flags<const QVariant*>::value
            }, {
                10304068304987445024ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                10304068304987445024ull,
                sizeof(const QVariant*),
                rustcpp::AlignOf<const QVariant*>::value,
                rustcpp::Flags<const QVariant*>::value
            }, {
                9776336523920512089ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                9776336523920512089ull,
                sizeof(QString),
                rustcpp::AlignOf<QString>::value,
                rustcpp::Flags<QString>::value
            }, {
                10260280531340185698ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                10260280531340185698ull,
                sizeof(QByteArray),
                rustcpp::AlignOf<QByteArray>::value,
                rustcpp::Flags<QByteArray>::value
            }, {
                6851256963740806587ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                6851256963740806587ull,
                sizeof(QDate),
                rustcpp::AlignOf<QDate>::value,
                rustcpp::Flags<QDate>::value
            }, {
                14822824282198042533ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                14822824282198042533ull,
                sizeof(QTime),
                rustcpp::AlignOf<QTime>::value,
                rustcpp::Flags<QTime>::value
            }, {
                9577632875754428637ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                9577632875754428637ull,
                sizeof(QDateTime),
                rustcpp::AlignOf<QDateTime>::value,
                rustcpp::Flags<QDateTime>::value
            }, {
                12585084837777232506ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                12585084837777232506ull,
                sizeof(QUrl),
                rustcpp::AlignOf<QUrl>::value,
                rustcpp::Flags<QUrl>::value
            }, {
                1874428007057786242ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                1874428007057786242ull,
                sizeof(QVariantList),
                rustcpp::AlignOf<QVariantList>::value,
                rustcpp::Flags<QVariantList>::value
            }, {
                10556058091063281365ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                10556058091063281365ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                9580956313917194299ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                9580956313917194299ull,
                sizeof(uint),
                rustcpp::AlignOf<uint>::value,
                rustcpp::Flags<uint>::value
            }, {
                15195171177230650588ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                15195171177230650588ull,
                sizeof(qlonglong),
                rustcpp::AlignOf<qlonglong>::value,
                rustcpp::Flags<qlonglong>::value
            }, {
                14718237765756166838ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                14718237765756166838ull,
                sizeof(qulonglong),
                rustcpp::AlignOf<qulonglong>::value,
                rustcpp::Flags<qulonglong>::value
            }, {
                12703415612999444173ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                12703415612999444173ull,
                sizeof(float),
                rustcpp::AlignOf<float>::value,
                rustcpp::Flags<float>::value
            }, {
                2797084026161068402ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                2797084026161068402ull,
                sizeof(double),
                rustcpp::AlignOf<double>::value,
                rustcpp::Flags<double>::value
            }, {
                16806477755470202597ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                16806477755470202597ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value
            }, {3880527165420293174ull, 0, 1, 0ull << 32}, {
                3880527165420293174ull,
                sizeof(QVariantList*),
                rustcpp::AlignOf<QVariantList*>::value,
                rustcpp::Flags<QVariantList*>::value
            }, {
                3880527165420293174ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value
            }, {16750525598968497861ull, 0, 1, 0ull << 32}, {
                16750525598968497861ull,
                sizeof(QVariantList*),
                rustcpp::AlignOf<QVariantList*>::value,
                rustcpp::Flags<QVariantList*>::value
            }, {
                16750525598968497861ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                16750525598968497861ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value
            }, {
                17547660470441641739ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value | 0ull << 32
            }, {
                17547660470441641739ull,
                sizeof(QVariantList*),
                rustcpp::AlignOf<QVariantList*>::value,
                rustcpp::Flags<QVariantList*>::value
            }, {
                17547660470441641739ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                17037157592311804455ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value | 0ull << 32
            }, {
                17037157592311804455ull,
                sizeof(QVariantList*),
                rustcpp::AlignOf<QVariantList*>::value,
                rustcpp::Flags<QVariantList*>::value
            }, {
                16424388451414857572ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                16424388451414857572ull,
                sizeof(QVariantList*),
                rustcpp::AlignOf<QVariantList*>::value,
                rustcpp::Flags<QVariantList*>::value
            }, {
                489009982765088639ull,
                sizeof(const QVariant*),
                rustcpp::AlignOf<const QVariant*>::value,
                rustcpp::Flags<const QVariant*>::value | 0ull << 32
            }, {
                489009982765088639ull,
                sizeof(QVariantList*),
                rustcpp::AlignOf<QVariantList*>::value,
                rustcpp::Flags<QVariantList*>::value
            }, {
                489009982765088639ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                7458894401545362033ull,
                sizeof(QVariant*),
                rustcpp::AlignOf<QVariant*>::value,
                rustcpp::Flags<QVariant*>::value | 0ull << 32
            }, {
                7458894401545362033ull,
                sizeof(QVariantList*),
                rustcpp::AlignOf<QVariantList*>::value,
                rustcpp::Flags<QVariantList*>::value
            }, {
                7458894401545362033ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                13585621834051019472ull,
                sizeof(uintptr_t),
                rustcpp::AlignOf<uintptr_t>::value,
                rustcpp::Flags<uintptr_t>::value | 0ull << 32
            }, {
                13585621834051019472ull,
                sizeof(const QModelIndex*),
                rustcpp::AlignOf<const QModelIndex*>::value,
                rustcpp::Flags<const QModelIndex*>::value
            }, {
                14255071748566617395ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                14255071748566617395ull,
                sizeof(const QModelIndex*),
                rustcpp::AlignOf<const QModelIndex*>::value,
                rustcpp::Flags<const QModelIndex*>::value
            }, {
                7067973194452636557ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value | 0ull << 32
            }, {
                7067973194452636557ull,
                sizeof(const QModelIndex*),
                rustcpp::AlignOf<const QModelIndex*>::value,
                rustcpp::Flags<const QModelIndex*>::value
            }, {
                1002981333814347212ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                1002981333814347212ull,
                sizeof(const QModelIndex*),
                rustcpp::AlignOf<const QModelIndex*>::value,
                rustcpp::Flags<const QModelIndex*>::value
            }, {
                12086316544111890877ull,
                sizeof(bool),
                rustcpp::AlignOf<bool>::value,
                rustcpp::Flags<bool>::value | 0ull << 32
            }, {
                12086316544111890877ull,
                sizeof(const QRectF*),
                rustcpp::AlignOf<const QRectF*>::value,
                rustcpp::Flags<const QRectF*>::value
            }, {
                12086316544111890877ull,
                sizeof(QPointF),
                rustcpp::AlignOf<QPointF>::value,
                rustcpp::Flags<QPointF>::value
            }, {
                11688091042753406134ull,
                sizeof(QColor),
                rustcpp::AlignOf<QColor>::value,
                rustcpp::Flags<QColor>::value | 0ull << 32
            }, {
                11688091042753406134ull,
                sizeof(size_t),
                rustcpp::AlignOf<size_t>::value,
                rustcpp::Flags<size_t>::value
            }, {
                11688091042753406134ull,
                sizeof(char*),
                rustcpp::AlignOf<char*>::value,
                rustcpp::Flags<char*>::value
            }, {
                14979884349474437996ull,
                sizeof(QColor),
                rustcpp::AlignOf<QColor>::value,
                rustcpp::Flags<QColor>::value | 0ull << 32
            }, {
                14979884349474437996ull,
                sizeof(qreal),
                rustcpp::AlignOf<qreal>::value,
                rustcpp::Flags<qreal>::value
            }, {
                14979884349474437996ull,
                sizeof(qreal),
                rustcpp::AlignOf<qreal>::value,
                rustcpp::Flags<qreal>::value
            }, {
                14979884349474437996ull,
                sizeof(qreal),
                rustcpp::AlignOf<qreal>::value,
                rustcpp::Flags<qreal>::value
            }, {
                17607348526063084915ull,
                sizeof(QColor),
                rustcpp::AlignOf<QColor>::value,
                rustcpp::Flags<QColor>::value | 0ull << 32
            }, {
                17607348526063084915ull,
                sizeof(qreal),
                rustcpp::AlignOf<qreal>::value,
                rustcpp::Flags<qreal>::value
            }, {
                17607348526063084915ull,
                sizeof(qreal),
                rustcpp::AlignOf<qreal>::value,
                rustcpp::Flags<qreal>::value
            }, {
                17607348526063084915ull,
                sizeof(qreal),
                rustcpp::AlignOf<qreal>::value,
                rustcpp::Flags<qreal>::value
            }, {
                17607348526063084915ull,
                sizeof(qreal),
                rustcpp::AlignOf<qreal>::value,
                rustcpp::Flags<qreal>::value
            }, {10467227045675067687ull, 0, 1, 0ull << 32}, {
                10467227045675067687ull,
                sizeof(const QColor*),
                rustcpp::AlignOf<const QColor*>::value,
                rustcpp::Flags<const QColor*>::value
            }, {
                10467227045675067687ull,
                sizeof(qreal*),
                rustcpp::AlignOf<qreal*>::value,
                rustcpp::Flags<qreal*>::value
            }, {
                10467227045675067687ull,
                sizeof(qreal*),
                rustcpp::AlignOf<qreal*>::value,
                rustcpp::Flags<qreal*>::value
            }, {
                10467227045675067687ull,
                sizeof(qreal*),
                rustcpp::AlignOf<qreal*>::value,
                rustcpp::Flags<qreal*>::value
            }, {
                10467227045675067687ull,
                sizeof(qreal*),
                rustcpp::AlignOf<qreal*>::value,
                rustcpp::Flags<qreal*>::value
            }, {
                6394057445011363820ull,
                sizeof(QImage),
                rustcpp::AlignOf<QImage>::value,
                rustcpp::Flags<QImage>::value | 0ull << 32
            }, {
                6394057445011363820ull,
                sizeof(QString),
                rustcpp::AlignOf<QString>::value,
                rustcpp::Flags<QString>::value
            }, {
                10892556743500651982ull,
                sizeof(QImage),
                rustcpp::AlignOf<QImage>::value,
                rustcpp::Flags<QImage>::value | 0ull << 32
            }, {
                10892556743500651982ull,
                sizeof(QSize),
                rustcpp::AlignOf<QSize>::value,
                rustcpp::Flags<QSize>::value
            }, {
                10892556743500651982ull,
                sizeof(QImage::Format),
                rustcpp::AlignOf<QImage::Format>::value,
                rustcpp::Flags<QImage::Format>::value
            }, {
                15899538126540607645ull,
                sizeof(QSize),
                rustcpp::AlignOf<QSize>::value,
                rustcpp::Flags<QSize>::value | 0ull << 32
            }, {
                15899538126540607645ull,
                sizeof(const QImage*),
                rustcpp::AlignOf<const QImage*>::value,
                rustcpp::Flags<const QImage*>::value
            }, {
                4534910372929543392ull,
                sizeof(QImage::Format),
                rustcpp::AlignOf<QImage::Format>::value,
                rustcpp::Flags<QImage::Format>::value | 0ull << 32
            }, {
                4534910372929543392ull,
                sizeof(const QImage*),
                rustcpp::AlignOf<const QImage*>::value,
                rustcpp::Flags<const QImage*>::value
            }, {10912162641851986331ull, 0, 1, 0ull << 32}, {
                10912162641851986331ull,
                sizeof(QImage*),
                rustcpp::AlignOf<QImage*>::value,
                rustcpp::Flags<QImage*>::value
            }, {
                10912162641851986331ull,
                sizeof(QColor),
                rustcpp::AlignOf<QColor>::value,
                rustcpp::Flags<QColor>::value
            }, {13634610544230282393ull, 0, 1, 0ull << 32}, {
                13634610544230282393ull,
                sizeof(QImage*),
                rustcpp::AlignOf<QImage*>::value,
                rustcpp::Flags<QImage*>::value
            }, {
                13634610544230282393ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                13634610544230282393ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                13634610544230282393ull,
                sizeof(QColor),
                rustcpp::AlignOf<QColor>::value,
                rustcpp::Flags<QColor>::value
            }, {
                11793769188191753925ull,
                sizeof(QColor),
                rustcpp::AlignOf<QColor>::value,
                rustcpp::Flags<QColor>::value | 0ull << 32
            }, {
                11793769188191753925ull,
                sizeof(const QImage*),
                rustcpp::AlignOf<const QImage*>::value,
                rustcpp::Flags<const QImage*>::value
            }, {
                11793769188191753925ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                11793769188191753925ull,
                sizeof(int),
                rustcpp::AlignOf<int>::value,
                rustcpp::Flags<int>::value
            }, {
                4269627225921479960ull,
                sizeof(QSize),
                rustcpp::AlignOf<QSize>::value,
                rustcpp::Flags<QSize>::value | 0ull << 32
            }, {
                4269627225921479960ull,
                sizeof(const QPixmap*),
                rustcpp::AlignOf<const QPixmap*>::value,
                rustcpp::Flags<const QPixmap*>::value
            }, {
                12267480048559093730ull,
                sizeof(QImage),
                rustcpp::AlignOf<QImage>::value,
                rustcpp::Flags<QImage>::value | 0ull << 32
            }, {
                12267480048559093730ull,
                sizeof(QPixmap),
                rustcpp::AlignOf<QPixmap>::value,
                rustcpp::Flags<QPixmap>::value
            }, {
                1749701084429884052ull,
                sizeof(QPixmap),
                rustcpp::AlignOf<QPixmap>::value,
                rustcpp::Flags<QPixmap>::value | 0ull << 32
            }, {
                1749701084429884052ull,
                sizeof(QImage),
                rustcpp::AlignOf<QImage>::value,
                rustcpp::Flags<QImage>::value
            }, {
                13218701394024708473ull,
                sizeof(QByteArray),
                rustcpp::AlignOf<QByteArray>::value,
                rustcpp::Flags<QByteArray>::value
            }, {
                3855882279009288530ull,
                sizeof(QDate),
                rustcpp::AlignOf<QDate>::value,
                rustcpp::Flags<QDate>::value
            }, {
                9664509992443926362ull,
                sizeof(QTime),
                rustcpp::AlignOf<QTime>::value,
                rustcpp::Flags<QTime>::value
            }, {
                12745287873870854044ull,
                sizeof(QDateTime),
                rustcpp::AlignOf<QDateTime>::value,
                rustcpp::Flags<QDateTime>::value
            }, {
                904990141642434126ull,
                sizeof(QUrl),
                rustcpp::AlignOf<QUrl>::value,
                rustcpp::Flags<QUrl>::value
            }, {
                17758593488171663550ull,
                sizeof(QString),
                rustcpp::AlignOf<QString>::value,
                rustcpp::Flags<QString>::value
            }, {
                1552316989142249818ull,
                sizeof(QVariant),
                rustcpp::AlignOf<QVariant>::value,
                rustcpp::Flags<QVariant>::value
            }, {
                17092488062754807674ull,
                sizeof(QVariantList),
                rustcpp::AlignOf<QVariantList>::value,
                rustcpp::Flags<QVariantList>::value
            }, {
                14287914185611067581ull,
                sizeof(QModelIndex),
                rustcpp::AlignOf<QModelIndex>::value,
                rustcpp::Flags<QModelIndex>::value
            }, {
                16172279075609518444ull,
                sizeof(QColor),
                rustcpp::AlignOf<QColor>::value,
                rustcpp::Flags<QColor>::value
            }, {
                7236053402056270306ull,
                sizeof(QImage),
                rustcpp::AlignOf<QImage>::value,
                rustcpp::Flags<QImage>::value
            }, {
                13185629402565163737ull,
                sizeof(QPixmap),
                rustcpp::AlignOf<QPixmap>::value,
                rustcpp::Flags<QPixmap>::value
            } }
};

} // namespace rustcpp
